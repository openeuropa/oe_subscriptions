<?php

/**
 * @file
 * Anonymous subscriptions module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Link;
use Drupal\Core\Mail\MailFormatHelper;
use Drupal\oe_subscriptions_anonymous\TokenManagerInterface;

/**
 * Implements hook_ENTITY_insert().
 */
function oe_subscriptions_anonymous_flag_insert(EntityInterface $entity) {
  _oe_subscriptions_anonymous_flush_extra_field($entity);
}

/**
 * Implements hook_ENTITY_update().
 */
function oe_subscriptions_anonymous_flag_update(EntityInterface $entity) {
  _oe_subscriptions_anonymous_flush_extra_field($entity);
}

/**
 * Implements hook_ENTITY_delete().
 */
function oe_subscriptions_anonymous_flag_delete(EntityInterface $entity) {
  _oe_subscriptions_anonymous_flush_extra_field($entity);
}

/**
 * Helper function to flush extra field cache().
 */
function _oe_subscriptions_anonymous_flush_extra_field(EntityInterface $entity) {
  if (str_starts_with($entity->id(), 'subscribe_')) {
    \Drupal::service('plugin.manager.extra_field_display')->clearCachedDefinitions();
  }
}

/**
 * Implements hook_mail().
 */
function oe_subscriptions_anonymous_mail($key, &$message, $params) {
  if ($key !== 'subscription_create') {
    return;
  }

  [
    'email' => $mail,
    'flag' => $flag,
    'entity_id' => $entity_id,
  ] = $params;

  /** @var \Drupal\flag\FlagInterface $flag */
  /** @var \Drupal\flag\FlagServiceInterface $flag_service */
  $flag_service = \Drupal::service('flag');
  $entity = $flag_service->getFlaggableById($flag, $entity_id);

  // Generate scope for subscribe.
  $token_manager = \Drupal::service('oe_subscriptions_anonymous.token_manager');
  $scope = $token_manager::buildScope(TokenManagerInterface::TYPE_SUBSCRIBE, [
    $flag->id(),
    $entity_id,
  ]);

  $hash = $token_manager->get($mail, $scope);
  // Generate mail links confirm and cancel.
  $route_parameters = [
    'flag' => $flag->id(),
    'entity_id' => $entity_id,
    'email' => $mail,
    'hash' => $hash,
  ];
  $confirm_link = Link::createFromRoute(t('Confirm subscription request'), 'oe_subscriptions_anonymous.anonymous_confirm', $route_parameters, [
    'absolute' => TRUE,
  ])->toString();

  $cancel_link = Link::createFromRoute(t('Cancel subscription'), 'oe_subscriptions_anonymous.anonymous_cancel', $route_parameters, [
    'absolute' => TRUE,
  ])->toString();

  // Links for subscription management.
  $variables = [
    '%entity_link' => $entity->toLink()->toString(),
    '%confirm_link' => $confirm_link,
    '%cancel_link' => $cancel_link,
  ];

  $body = strtr(t("%entity_link \r\n %confirm_link \r\n %cancel_link"), $variables);
  $message['subject'] .= t('Anonymous subscription');
  $message['body'][] = MailFormatHelper::htmlToText($body);
}
